# DDCPTS Docker Compose - Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ddcpts_db
    environment:
      POSTGRES_USER: ddcpts
      POSTGRES_PASSWORD: ddcpts_dev_password
      POSTGRES_DB: ddcpts_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ddcpts"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ddcpts_network

  # Redis (for background tasks and caching)
  redis:
    image: redis:7-alpine
    container_name: ddcpts_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - ddcpts_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ddcpts_backend
    environment:
      # Database
      DATABASE_URL: postgresql://ddcpts:ddcpts_dev_password@db:5432/ddcpts_dev
      
      # Application
      ENVIRONMENT: development
      DEBUG: "true"
      LOG_LEVEL: INFO
      API_HOST: 0.0.0.0
      API_PORT: 8000
      
      # Security
      SECRET_KEY: dev-secret-key-change-in-production-use-openssl-rand-hex-32
      
      # SMS (Mock for development)
      SMS_PROVIDER: mock
      USE_MOCK_SMS: "true"
      
      # Payments (Mock for development)
      USE_MOCK_PAYMENTS: "true"
      ENABLE_REAL_PAYMENTS: "false"
      
      # Seed data
      CREATE_SEED_DATA: "true"
      SEED_ADMIN_EMAIL: admin@ddcpts.test
      SEED_ADMIN_PASSWORD: Admin@123
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # CORS
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=2)"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - ddcpts_network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        alembic upgrade head || echo 'Migration failed or already up to date' &&
        echo 'Starting application...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # React Web Dashboard (will be added)
  # web:
  #   build:
  #     context: ./web
  #     dockerfile: Dockerfile
  #   container_name: ddcpts_web
  #   environment:
  #     VITE_API_URL: http://localhost:8000/api/v1
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./web:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - ddcpts_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ddcpts_network:
    driver: bridge
